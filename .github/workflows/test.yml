name: Test

on:
  push:
    branches:
      - master
  pull_request:

permissions:
  contents: read

jobs:
  build:
    name: Build checks
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
    - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install
      run: npm ci
    - name: Build & Verify
      run: npm run build && git diff --exit-code

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
    - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
      with:

        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - run: npm ci
    - run: npm run lint

  unit:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
    - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install
      run: npm ci
    - name: Test
      run: npm test
      env:
        INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  integration:
    name: Integration test

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Use Action
      uses: ./
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Validate
      run: tflint -v

  integration-versions:
    name: 'Integration test: version (tflint_version: ${{ matrix.tflint_version }})'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tflint_version: ['v0.24.1', latest]

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Use Action
      uses: ./
      with:
        tflint_version: ${{ matrix.tflint_version }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Validate
      if: matrix.tflint_version != 'latest'
      run: |-
        version='${{ matrix.tflint_version }}'
        tflint -v | grep ${version:1}
    - name: Validate
      if: matrix.tflint_version == 'latest'
      run: tflint -v

  integration-checksum:
    runs-on: ubuntu-latest
    name: 'Integration test: checksum'

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Use Action
        uses: ./
        with:
          tflint_version: 'v0.53.0'
          # https://github.com/terraform-linters/tflint/releases/tag/v0.53.0
          # checksums.txt
          # tflint_linux_amd64
          checksums: bb0a3a6043ea1bcd221fc95d49bac831bb511eb31946ca6a4050983e9e584578
      - run: tflint -v

  integration-matchers:
    name: 'Integration test: matchers (tflint_version: ${{ matrix.tflint_version }})'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tflint_version: ['v0.26.0', latest]

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Use Action
      uses: ./
      with:
        tflint_version: ${{ matrix.tflint_version }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Run
      run: tflint -f compact --force

  integration-wrapper:
    name: 'Integration test: wrapper (tflint_version: ${{ matrix.tflint_version }})'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tflint_version: [ 'v0.26.0', latest ]

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Use Action
        uses: ./
        with:
          tflint_version: ${{ matrix.tflint_version }}
          tflint_wrapper: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run
        id: tflint
        run: tflint -f compact --force
      - name: Verify Exit Code Output
        run: |
          if [[ ${{ steps.tflint.outputs.exitcode }} -ne 0 ]]; then
            echo "TFLint Exit Code not captured."
            exit 1
          else
            echo "TFLint Exit Code captured."
          fi

  integration-cache:
    name: 'Integration test: cache'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Use Action
        uses: ./
        with:
          cache: true
          tflint_config_path: .github/workflows/fixtures/.tflint.hcl
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Init TFLint
        run: tflint --init --config .github/workflows/fixtures/.tflint.hcl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Verify plugin installed
        run: test -d ~/.tflint.d/plugins

  integration-version-output:
    name: 'Integration test: version output'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Use Action
        id: setup-tflint
        uses: ./
        with:
          tflint_version: 'v0.53.0'
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Verify version output
        run: |
          if [[ "${{ steps.setup-tflint.outputs.tflint-version }}" != "0.53.0" ]]; then
            echo "Expected version output '0.53.0', got '${{ steps.setup-tflint.outputs.tflint-version }}'"
            exit 1
          fi
